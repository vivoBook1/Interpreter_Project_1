(def swap (arr a b)
    (begin
   
        (var temp (arr -> a))
        (set (arr -> a) (arr -> b))
        (set (arr -> b) temp)
  
   )
)

(def partition (arr low high)

    (begin
    
        (var pivot (arr -> high))
        (var i (low - 1))

        (for (var j low) (j <= (high - 1)) (+= j 1)

            (if ((arr -> j) <= pivot) 
            
                (begin

                    (++ i)
                    (swap arr i j)

                )

                (begin

                    (var hhvkjjn 80)

                )

            )

        )

        (swap arr (i + 1) high)
        (++ i)
    
    )

)

(def Qsort (arr low high)

    (begin
    
        (if (< low high) 
        
            (begin

                (var pi (partition arr low high))
                
                (Qsort arr low (- pi 1))
                (Qsort arr (+ pi 1) high)

            )

            (begin

                (var hhvkgjn 80)

            )
        
        )

    )

)

(exports QSort)